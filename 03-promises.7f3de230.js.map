{"mappings":"qhBAMA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAASC,SAASC,cAAc,SAChCC,EAAUF,SAASC,cAAc,kBACjCE,EAASH,SAASC,cAAc,iBAChCG,EAAWJ,SAASC,cAAc,mBAIxC,SAASI,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAgBC,KAAKC,SAAW,GAEtCC,YAAW,KACLH,EACFF,EAAQ,C,SAAEH,E,MAAUC,IAEpBG,EAAO,C,SAAEJ,E,MAAUC,GAAQ,GAE5BA,EAAM,G,CAZbR,EAAOgB,iBAAiB,UAgBxB,SAAsBC,GAEpB,GADAA,EAAEC,iBACEf,EAAQgB,OAAS,GAAKf,EAAOe,OAAS,GAAKd,EAASc,OAAS,EAC/D,OAAOC,EAAAtB,GAASuB,OAAOC,QACrB,oCACA,aAIJ,IAAIC,EAAYC,OAAOrB,EAAQgB,OAE/B,IAAK,IAAIM,EAAI,EAAGA,GAAKpB,EAASc,MAAOM,GAAK,EAAG,CAG3CnB,EAFSmB,EAESF,GACfG,MAAK,EAACnB,SAAEA,EAAQC,MAAEA,MACjBY,EAAAtB,GAAS6B,OAAOC,QACd,uBAAqBrB,QAAiBC,MAAU,IAGnDqB,OAAM,EAACtB,SAAEA,EAAQC,MAAEA,MAClBY,EAAAtB,GAAS6B,OAAOG,QACd,sBAAoBvB,QAAeC,MAAU,IAInDe,GAAaC,OAAOpB,EAAOe,M,CAG7BF,EAAEc,OAAOC,O","sources":["src/js/03-promises.js"],"sourcesContent":["//Генератора промісів\n\n// Напиши скрипт, який на момент сабміту форми викликає функцію createPromise(position, delay) стільки разів, скільки ввели в поле amount.Під час кожного виклику передай їй номер промісу(position), що створюється, і затримку, враховуючи першу затримку(delay), введену користувачем, і крок(step).\n\n//Доповни код функції createPromise таким чином, щоб вона повертала один проміс, який виконується або відхиляється через delay часу. Значенням промісу повинен бути об'єкт, в якому будуть властивості position і delay зі значеннями однойменних параметрів. Використовуй початковий код функції для вибору того, що потрібно зробити з промісом - виконати або відхилити.\n\nimport Notiflix from 'notiflix';\n\nconst formEl = document.querySelector('.form');\nconst delayEl = document.querySelector('[name=\"delay\"]');\nconst stepEl = document.querySelector('[name=\"step\"]');\nconst amountEl = document.querySelector('[name=\"amount\"]');\n\nformEl.addEventListener('submit', onFormSubmit);\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\nfunction onFormSubmit(e) {\n  e.preventDefault();\n  if (delayEl.value <= 0 || stepEl.value <= 0 || amountEl.value <= 0) {\n    return Notiflix.Report.warning(\n      'The number must be greater than 0',\n      'Try again'\n    );\n  }\n\n  let delayTime = Number(delayEl.value);\n\n  for (let i = 1; i <= amountEl.value; i += 1) {\n    let id = i;\n\n    createPromise(id, delayTime)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay}ms`\n        );\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${position} in ${delay}ms`\n        );\n      });\n\n    delayTime += Number(stepEl.value);\n  }\n\n  e.target.reset();\n}\n"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$formEl","document","querySelector","$47d4ff9957288465$var$delayEl","$47d4ff9957288465$var$stepEl","$47d4ff9957288465$var$amountEl","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","addEventListener","e","preventDefault","value","$parcel$interopDefault","Report","warning","delayTime","Number","i","then","Notify","success","catch","failure","target","reset"],"version":3,"file":"03-promises.7f3de230.js.map"}